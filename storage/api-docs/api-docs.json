{
    "openapi": "3.0.0",
    "info": {
        "title": "Chrono Rhône API",
        "description": "Description of Chrono Rhône API",
        "contact": {
            "email": "arnaud.fanny@ens-lyon.fr"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "/api/v1",
            "description": "First version of Chrono Rhône API"
        }
    ],
    "paths": {
        "/relationships": {
            "get": {
                "tags": [
                    "Relationships"
                ],
                "summary": "Get informations for all relationships",
                "responses": {
                    "200": {
                        "description": "Return all relationships"
                    },
                    "401": {
                        "description": "You are not allowed to access this endpoint"
                    }
                }
            }
        },
        "/admin/relationships/{id}": {
            "get": {
                "tags": [
                    "Relationships"
                ],
                "summary": "Get informations for one relationship",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return relationship informations"
                    },
                    "401": {
                        "description": "You are not allowed to access this endpoint"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Relationships"
                ],
                "summary": "Update a relationship",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name_fr",
                                    "name_en"
                                ],
                                "properties": {
                                    "name_fr": {
                                        "description": "French relationship name",
                                        "type": "string",
                                        "example": "Histoire"
                                    },
                                    "name_en": {
                                        "description": "English relationship name",
                                        "type": "string",
                                        "example": "Story"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to update a relationship"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Relationships"
                ],
                "summary": "Delete a relationship",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to delete this relationship"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/admin/relationships": {
            "post": {
                "tags": [
                    "Relationships"
                ],
                "summary": "Add new relationship",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name_fr",
                                    "name_en"
                                ],
                                "properties": {
                                    "name_fr": {
                                        "description": "French relationship name",
                                        "type": "string",
                                        "example": "Histoire"
                                    },
                                    "name_en": {
                                        "description": "English relationship name",
                                        "type": "string",
                                        "example": "Story"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to create a relationship"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get informations for all roles",
                "responses": {
                    "200": {
                        "description": "Return all roles"
                    },
                    "401": {
                        "description": "You are not allowed to access this endpoint"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/admin/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get informations for one role",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return role informations"
                    },
                    "401": {
                        "description": "You are not allowed to access this endpoint"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update a role",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "slug",
                                    "name"
                                ],
                                "properties": {
                                    "slug": {
                                        "description": "Role slug",
                                        "type": "string",
                                        "example": "visitor"
                                    },
                                    "name": {
                                        "description": "Role name",
                                        "type": "string",
                                        "example": "Visitor"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to update a role"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete a role",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to delete this role"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/admin/roles": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Add new role",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "slug",
                                    "name"
                                ],
                                "properties": {
                                    "slug": {
                                        "description": "Role slug",
                                        "type": "string",
                                        "example": "visitor"
                                    },
                                    "name": {
                                        "description": "Role name",
                                        "type": "string",
                                        "example": "Visitor"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to create a role"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/thematics": {
            "get": {
                "tags": [
                    "Thematics"
                ],
                "summary": "Get informations for all thematics",
                "responses": {
                    "200": {
                        "description": "Return all thematics"
                    },
                    "401": {
                        "description": "You are not allowed to access this endpoint"
                    }
                }
            }
        },
        "/admin/thematics/{id}": {
            "get": {
                "tags": [
                    "Thematics"
                ],
                "summary": "Get informations for one thematic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Thematic id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return thematic informations"
                    },
                    "401": {
                        "description": "You are not allowed to access this endpoint"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Thematics"
                ],
                "summary": "Update a thematic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Thematic id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name_fr",
                                    "name_en",
                                    "ranking"
                                ],
                                "properties": {
                                    "name_fr": {
                                        "description": "French thematic name",
                                        "type": "string",
                                        "example": "Thematic 1"
                                    },
                                    "name_en": {
                                        "description": "English thematic name",
                                        "type": "string",
                                        "example": "Thematic 1"
                                    },
                                    "ranking": {
                                        "description": "Rank for this thematic",
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to update a thematic"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Thematics"
                ],
                "summary": "Delete a thematic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Thematic id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to delete this thematic"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/admin/thematics": {
            "post": {
                "tags": [
                    "Thematics"
                ],
                "summary": "Add new thematic",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name_fr",
                                    "name_en",
                                    "ranking"
                                ],
                                "properties": {
                                    "name_fr": {
                                        "description": "French thematic name",
                                        "type": "string",
                                        "example": "Thematic 1"
                                    },
                                    "name_en": {
                                        "description": "English thematic name",
                                        "type": "string",
                                        "example": "Thematic 1"
                                    },
                                    "ranking": {
                                        "description": "Rank for this thematic",
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to create a thematic"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/themes": {
            "get": {
                "tags": [
                    "Themes"
                ],
                "summary": "Get informations for all themes",
                "responses": {
                    "200": {
                        "description": "Return all themes"
                    },
                    "401": {
                        "description": "You are not allowed to access this endpoint"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/admin/themes/{id}": {
            "get": {
                "tags": [
                    "Themes"
                ],
                "summary": "Get informations for one theme",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Theme id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return theme informations"
                    },
                    "401": {
                        "description": "You are not allowed to access this endpoint"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Themes"
                ],
                "summary": "Update a theme",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Theme id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name_fr",
                                    "name_en",
                                    "ranking",
                                    "color",
                                    "thematic_id"
                                ],
                                "properties": {
                                    "name_fr": {
                                        "description": "French theme name",
                                        "type": "string",
                                        "example": "Theme 1"
                                    },
                                    "name_en": {
                                        "description": "English theme name",
                                        "type": "string",
                                        "example": "Theme 1"
                                    },
                                    "color": {
                                        "description": "Hexadecimal code color for this theme",
                                        "type": "string",
                                        "example": "#ffffff"
                                    },
                                    "ranking": {
                                        "description": "Rank for this theme",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "thematic_id": {
                                        "description": "Thematic Id for this theme",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to update a theme"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Themes"
                ],
                "summary": "Delete a theme",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Theme id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to delete this theme"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/admin/themes": {
            "post": {
                "tags": [
                    "Themes"
                ],
                "summary": "Add new theme",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name_fr",
                                    "name_en",
                                    "ranking",
                                    "color",
                                    "thematic_id"
                                ],
                                "properties": {
                                    "name_fr": {
                                        "description": "French theme name",
                                        "type": "string",
                                        "example": "Theme 1"
                                    },
                                    "name_en": {
                                        "description": "English theme name",
                                        "type": "string",
                                        "example": "Theme 1"
                                    },
                                    "color": {
                                        "description": "Hexadecimal code color for this theme",
                                        "type": "string",
                                        "example": "#ffffff"
                                    },
                                    "ranking": {
                                        "description": "Rank for this theme",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "thematic_id": {
                                        "description": "Thematic Id for this theme",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to create a theme"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get informations for all users",
                "responses": {
                    "200": {
                        "description": "Return all users"
                    },
                    "401": {
                        "description": "You are not allowed to access this endpoint"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/admin/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get informations for one user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return user informations"
                    },
                    "401": {
                        "description": "You are not allowed to access this endpoint"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "name",
                                    "organization",
                                    "email"
                                ],
                                "properties": {
                                    "firstname": {
                                        "description": "Firstname",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "name": {
                                        "description": "Name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "organization": {
                                        "description": "Organization",
                                        "type": "string",
                                        "example": "ENS de Lyon"
                                    },
                                    "email": {
                                        "description": "Mail address",
                                        "type": "email",
                                        "example": "john.doe@ens-lyon.fr"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "password",
                                        "example": "YourPassword"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "password",
                                        "example": "YourPassword"
                                    },
                                    "role": {
                                        "description": "Role id for this user",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to update a user"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to delete this user"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/admin/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Add new user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "name",
                                    "organization",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "role"
                                ],
                                "properties": {
                                    "firstname": {
                                        "description": "Firstname",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "name": {
                                        "description": "Name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "organization": {
                                        "description": "Organization",
                                        "type": "string",
                                        "example": "ENS de Lyon"
                                    },
                                    "email": {
                                        "description": "Mail address",
                                        "type": "email",
                                        "example": "john.doe@ens-lyon.fr"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "password",
                                        "example": "YourPassword"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "password",
                                        "example": "YourPassword"
                                    },
                                    "role": {
                                        "description": "Role id for this user",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to create a user"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get a Json Web Token for User",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User mail address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a JWT token"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log the user out (Invalidate the token)",
                "responses": {
                    "200": {
                        "description": "Logged out"
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh a token.",
                "responses": {
                    "200": {
                        "description": "Get a new JWT for the current user"
                    },
                    "401": {
                        "description": "You are not allowed to renew a token"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get the authenticated User",
                "responses": {
                    "200": {
                        "description": "Get my user informations"
                    },
                    "401": {
                        "description": "You are not allowed to access this service"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get informations for all events paginated by 100",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return all events"
                    }
                }
            }
        },
        "/events/list": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get id and title for all events",
                "responses": {
                    "200": {
                        "description": "Return id and title for all events"
                    }
                }
            }
        },
        "/event/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get informations for one event",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return an event"
                    }
                }
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title_fr",
                                    "start_year",
                                    "theme",
                                    "author_id"
                                ],
                                "properties": {
                                    "title_fr": {
                                        "description": "french title",
                                        "type": "string",
                                        "example": "Mon évènement"
                                    },
                                    "title_en": {
                                        "description": "English title",
                                        "type": "string",
                                        "example": "My event"
                                    },
                                    "start_year": {
                                        "description": "Start year of the event",
                                        "type": "integer",
                                        "example": 1900
                                    },
                                    "start_month": {
                                        "description": "Start month of the event",
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "start_day": {
                                        "description": "Start day of the event",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "end_year": {
                                        "description": "End year of the event",
                                        "type": "integer",
                                        "example": 1900
                                    },
                                    "end_month": {
                                        "description": "End month of the event",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "end_day": {
                                        "description": "End day of the event",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description_fr": {
                                        "description": "French description",
                                        "type": "string",
                                        "example": "Ma description"
                                    },
                                    "description_en": {
                                        "description": "English description",
                                        "type": "string",
                                        "example": "My description"
                                    },
                                    "bibliography_fr": {
                                        "description": "French bibliography",
                                        "type": "string",
                                        "example": "Ma bibliographie"
                                    },
                                    "bibliography_en": {
                                        "description": "English bibliography",
                                        "type": "string",
                                        "example": "My bibliography"
                                    },
                                    "km_up": {
                                        "description": "Kilometer upstream",
                                        "type": "numeric",
                                        "example": 0
                                    },
                                    "km_down": {
                                        "description": "Kilometer downstream",
                                        "type": "numeric",
                                        "example": 50.1
                                    },
                                    "theme": {
                                        "description": "Theme Id",
                                        "type": "json",
                                        "example": {
                                            "id": 1
                                        }
                                    },
                                    "author_id": {
                                        "description": "Author Id",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "points": {
                                        "description": "Multipoint geometry based on geojson nomenclature",
                                        "properties": {
                                            "type": {
                                                "description": "Update an event",
                                                "type": "string",
                                                "example": "MultiPoint"
                                            },
                                            "coordinates": {
                                                "description": "Update an event",
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                },
                                                "example": [
                                                    [
                                                        4.05,
                                                        45.5
                                                    ]
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "lines": {
                                        "description": "Multilinestring geometry based on geojson nomenclature",
                                        "properties": {
                                            "type": {
                                                "description": "Update an event",
                                                "type": "string",
                                                "example": "MultiLineString"
                                            },
                                            "coordinates": {
                                                "description": "Update an event",
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                },
                                                "example": [
                                                    [
                                                        [
                                                            1.76,
                                                            44.46
                                                        ],
                                                        [
                                                            2.58,
                                                            45.78
                                                        ],
                                                        [
                                                            5.29,
                                                            44.94
                                                        ],
                                                        [
                                                            5.75,
                                                            44.66
                                                        ]
                                                    ]
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "polygons": {
                                        "description": "Multipolygon geometry based on geojson nomenclature",
                                        "properties": {
                                            "type": {
                                                "description": "Update an event",
                                                "type": "string",
                                                "example": "MultiPolygon"
                                            },
                                            "coordinates": {
                                                "description": "Update an event",
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                },
                                                "example": [
                                                    [
                                                        [
                                                            [
                                                                4.28,
                                                                45.87
                                                            ],
                                                            [
                                                                5.38,
                                                                45.89
                                                            ],
                                                            [
                                                                5.3,
                                                                44.21
                                                            ],
                                                            [
                                                                4.331,
                                                                44.36
                                                            ],
                                                            [
                                                                4.28,
                                                                45.87
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "from_events": {
                                        "description": "Parent relationships to this event",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "Parent event Id",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "relationship_id": {
                                                    "description": "Relationship Id",
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "to_events": {
                                        "description": "Children relationships to this event",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "children event Id",
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "relationship_id": {
                                                    "description": "Relationship Id",
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to update an event"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to delete this event"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/event": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Add new event",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title_fr",
                                    "start_year",
                                    "theme",
                                    "author_id"
                                ],
                                "properties": {
                                    "title_fr": {
                                        "description": "french title",
                                        "type": "string",
                                        "example": "Mon évènement"
                                    },
                                    "title_en": {
                                        "description": "English title",
                                        "type": "string",
                                        "example": "My event"
                                    },
                                    "start_year": {
                                        "description": "Start year of the event",
                                        "type": "integer",
                                        "example": 1900
                                    },
                                    "start_month": {
                                        "description": "Start month of the event",
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "start_day": {
                                        "description": "Start day of the event",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "end_year": {
                                        "description": "End year of the event",
                                        "type": "integer",
                                        "example": 1900
                                    },
                                    "end_month": {
                                        "description": "End month of the event",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "end_day": {
                                        "description": "End day of the event",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description_fr": {
                                        "description": "French description",
                                        "type": "string",
                                        "example": "Ma description"
                                    },
                                    "description_en": {
                                        "description": "English description",
                                        "type": "string",
                                        "example": "My description"
                                    },
                                    "bibliography_fr": {
                                        "description": "French bibliography",
                                        "type": "string",
                                        "example": "Ma bibliographie"
                                    },
                                    "bibliography_en": {
                                        "description": "English bibliography",
                                        "type": "string",
                                        "example": "My bibliography"
                                    },
                                    "km_up": {
                                        "description": "Kilometer upstream",
                                        "type": "numeric",
                                        "example": 0
                                    },
                                    "km_down": {
                                        "description": "Kilometer downstream",
                                        "type": "numeric",
                                        "example": 50.1
                                    },
                                    "theme": {
                                        "description": "Theme Id",
                                        "type": "json",
                                        "example": {
                                            "id": 1
                                        }
                                    },
                                    "author_id": {
                                        "description": "Author Id",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "points": {
                                        "description": "Multipoint geometry based on geojson nomenclature",
                                        "properties": {
                                            "type": {
                                                "description": "Add new event",
                                                "type": "string",
                                                "example": "MultiPoint"
                                            },
                                            "coordinates": {
                                                "description": "Add new event",
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                },
                                                "example": [
                                                    [
                                                        4.05,
                                                        45.5
                                                    ]
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "lines": {
                                        "description": "Multilinestring geometry based on geojson nomenclature",
                                        "properties": {
                                            "type": {
                                                "description": "Add new event",
                                                "type": "string",
                                                "example": "MultiLineString"
                                            },
                                            "coordinates": {
                                                "description": "Add new event",
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                },
                                                "example": [
                                                    [
                                                        [
                                                            1.76,
                                                            44.46
                                                        ],
                                                        [
                                                            2.58,
                                                            45.78
                                                        ],
                                                        [
                                                            5.29,
                                                            44.94
                                                        ],
                                                        [
                                                            5.75,
                                                            44.66
                                                        ]
                                                    ]
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "polygons": {
                                        "description": "Multipolygon geometry based on geojson nomenclature",
                                        "properties": {
                                            "type": {
                                                "description": "Add new event",
                                                "type": "string",
                                                "example": "MultiPolygon"
                                            },
                                            "coordinates": {
                                                "description": "Add new event",
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                },
                                                "example": [
                                                    [
                                                        [
                                                            [
                                                                4.28,
                                                                45.87
                                                            ],
                                                            [
                                                                5.38,
                                                                45.89
                                                            ],
                                                            [
                                                                5.3,
                                                                44.21
                                                            ],
                                                            [
                                                                4.331,
                                                                44.36
                                                            ],
                                                            [
                                                                4.28,
                                                                45.87
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "from_events": {
                                        "description": "Parent relationships to this event",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "Parent event Id",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "relationship_id": {
                                                    "description": "Relationship Id",
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "to_events": {
                                        "description": "Children relationships to this event",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "children event Id",
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "relationship_id": {
                                                    "description": "Relationship Id",
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to create an event"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/events/export": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Export events",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ids",
                                    "type"
                                ],
                                "properties": {
                                    "ids": {
                                        "description": "Id list of events to download",
                                        "type": "array",
                                        "items": {
                                            "type": "number"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5
                                        ]
                                    },
                                    "type": {
                                        "description": "type of file downloaded (choice between xlsx, xls and csv)",
                                        "type": "string",
                                        "example": "xlsx"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File export"
                    }
                }
            }
        },
        "/events/geojson": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Export events in geojson format",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ids"
                                ],
                                "properties": {
                                    "ids": {
                                        "description": "Id list of events to download",
                                        "type": "array",
                                        "items": {
                                            "type": "number"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Geojson file export"
                    }
                }
            }
        },
        "/images": {
            "get": {
                "tags": [
                    "Images"
                ],
                "summary": "Get informations for all images paginated by 100",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return all images"
                    },
                    "401": {
                        "description": "You are not allowed to access this endpoint"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/upload/image": {
            "post": {
                "tags": [
                    "Images"
                ],
                "summary": "Upload an image",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file",
                                    "legend_fr",
                                    "copyright"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "Image to upload",
                                        "type": "file",
                                        "format": "binary"
                                    },
                                    "legend_fr": {
                                        "description": "French legend",
                                        "type": "string",
                                        "example": "My legend"
                                    },
                                    "legend_en": {
                                        "description": "English legend",
                                        "type": "string",
                                        "example": "My legend"
                                    },
                                    "copyright": {
                                        "description": "Copyright for this image",
                                        "type": "string",
                                        "example": "Copyright"
                                    },
                                    "events": {
                                        "description": "Events linked to this image",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "Event Id",
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to upload image"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/image/{id}": {
            "put": {
                "tags": [
                    "Images"
                ],
                "summary": "Upload an image",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Image id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "legend_fr",
                                    "copyright"
                                ],
                                "properties": {
                                    "legend_fr": {
                                        "description": "French legend",
                                        "type": "string",
                                        "example": "My legend"
                                    },
                                    "legend_en": {
                                        "description": "English legend",
                                        "type": "string",
                                        "example": "My legend"
                                    },
                                    "copyright": {
                                        "description": "Copyright for this image",
                                        "type": "string",
                                        "example": "Copyright"
                                    },
                                    "events": {
                                        "description": "Events linked to this image",
                                        "type": "array",
                                        "items": {
                                            "description": "Event Id",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to upload image"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/storage/{filename}": {
            "delete": {
                "tags": [
                    "Images"
                ],
                "summary": "Delete an image",
                "parameters": [
                    {
                        "name": "filename",
                        "in": "path",
                        "description": "Image filename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You are not allowed to delete this event"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Operations about authentication with JWT"
        },
        {
            "name": "Events",
            "description": "Operations about events"
        },
        {
            "name": "Images",
            "description": "Operations about images"
        },
        {
            "name": "Users",
            "description": "Operations about users"
        },
        {
            "name": "Roles",
            "description": "Operations about roles"
        },
        {
            "name": "Thematics",
            "description": "Operations about thematics"
        },
        {
            "name": "Themes",
            "description": "Operations about themes"
        },
        {
            "name": "Relationships",
            "description": "Operations about relationships"
        }
    ],
    "components": {
        "securitySchemes": {
            "jwt": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "in": "header"
            }
        }
    }
}